# docker-compose.prod.yml - 修復版本
services:
  # Laravel 應用服務
  app:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
    container_name: laravel-app
    restart: unless-stopped
    environment:
      - CONTAINER_ROLE=app
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL}
      
      # 資料庫配置
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Redis 配置
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      
      # 快取配置
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      
      # 日誌配置
      - LOG_CHANNEL=stack
      - LOG_LEVEL=error
    
    volumes:
      - laravel_app:/var/www/html          # 重要：整個應用
      - app_storage:/var/www/html/storage  # storage 目錄
    networks:
      - laravel
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Laravel Horizon
  horizon:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
    container_name: laravel-horizon
    restart: unless-stopped
    environment:
      - CONTAINER_ROLE=horizon
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      
      # 資料庫配置
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Redis 配置
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    
    command: php artisan horizon
    volumes:
      - laravel_app:/var/www/html          # 重要：整個應用
      - app_storage:/var/www/html/storage
    networks:
      - laravel
    depends_on:
      - db
      - redis
      - app

  # Nginx 網頁伺服器
  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - laravel_app:/var/www/html:ro       # 重要：整個應用（只讀）
      - app_storage:/var/www/html/storage:ro
    networks:
      - laravel
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL 資料庫
  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--innodb-buffer-pool-size=256M',
      '--max-connections=100'
    ]
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis 快取
  redis:
    image: redis:alpine
    container_name: laravel-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  laravel:
    driver: bridge

volumes:
  laravel_app:    # 重要：新增這個 volume
  app_storage:
  mysql_data:
  redis_data: