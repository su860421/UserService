services:
  # 應用程式服務 (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      # [確認項目 3] 在本地開發時保留此行，方便即時修改程式碼
      - .:/var/www/html
    # [確認項目 2] 此設定會讀取 .env 檔案來取得所有環境變數
    env_file:
      - .env
    networks:
      - laravel
    depends_on:
      - db
      - redis

  # 新增 Nginx 服務
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      # [確認項目 3] 同樣掛載程式碼，讓 Nginx 能讀取到 public 下的靜態檔案
      - .:/var/www/html
      # [確認項目 1] 此設定需要 nginx.conf 檔案存在於同目錄下
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel
    depends_on:
      - app

  # 資料庫服務
  db:
    image: mysql:8.0
    restart: unless-stopped
    # [確認項目 2] MYSQL_DATABASE 的值將從 .env 檔案中讀取
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  # Redis 服務
  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel

  # Horizon 服務
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    command: php artisan horizon
    restart: unless-stopped
    volumes:
      # [確認項目 3] 掛載程式碼
      - .:/var/www/html
    # [確認項目 2] 從 .env 讀取設定
    env_file:
      - .env
    networks:
      - laravel
    depends_on:
      - redis
      - db

# 統一定義網路
networks:
  laravel:
    driver: bridge

# 定義資料庫的持久化儲存
volumes:
  dbdata: